/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
  IsDate,
} from "class-validator";
import { DocumentUpdateManyWithoutApplicationsInput } from "./DocumentUpdateManyWithoutApplicationsInput";
import { Type } from "class-transformer";
import { EducationUpdateManyWithoutApplicationsInput } from "./EducationUpdateManyWithoutApplicationsInput";
import { InstitutionWhereUniqueInput } from "../../institution/base/InstitutionWhereUniqueInput";
import { EnumApplicationStatus } from "./EnumApplicationStatus";
import { TrainingUpdateManyWithoutApplicationsInput } from "./TrainingUpdateManyWithoutApplicationsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { WorkExperienceUpdateManyWithoutApplicationsInput } from "./WorkExperienceUpdateManyWithoutApplicationsInput";

@InputType()
class ApplicationUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  applicationNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comments?: string | null;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => EducationUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => EducationUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => EducationUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  educations?: EducationUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => InstitutionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => InstitutionWhereUniqueInput)
  @IsOptional()
  @Field(() => InstitutionWhereUniqueInput, {
    nullable: true,
  })
  institution?: InstitutionWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumApplicationStatus,
  })
  @IsEnum(EnumApplicationStatus)
  @IsOptional()
  @Field(() => EnumApplicationStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  submissionDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => TrainingUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => TrainingUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => TrainingUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  trainings?: TrainingUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => WorkExperienceUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => WorkExperienceUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => WorkExperienceUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  workExperiences?: WorkExperienceUpdateManyWithoutApplicationsInput;
}

export { ApplicationUpdateInput as ApplicationUpdateInput };
