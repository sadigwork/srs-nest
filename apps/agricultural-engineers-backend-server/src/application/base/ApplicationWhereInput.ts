/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { DocumentListRelationFilter } from "../../document/base/DocumentListRelationFilter";
import { EducationListRelationFilter } from "../../education/base/EducationListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { InstitutionWhereUniqueInput } from "../../institution/base/InstitutionWhereUniqueInput";
import { EnumApplicationStatus } from "./EnumApplicationStatus";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { TrainingListRelationFilter } from "../../training/base/TrainingListRelationFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { WorkExperienceListRelationFilter } from "../../workExperience/base/WorkExperienceListRelationFilter";

@InputType()
class ApplicationWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  applicationNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  comments?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DocumentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DocumentListRelationFilter)
  @IsOptional()
  @Field(() => DocumentListRelationFilter, {
    nullable: true,
  })
  documents?: DocumentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EducationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EducationListRelationFilter)
  @IsOptional()
  @Field(() => EducationListRelationFilter, {
    nullable: true,
  })
  educations?: EducationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InstitutionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => InstitutionWhereUniqueInput)
  @IsOptional()
  @Field(() => InstitutionWhereUniqueInput, {
    nullable: true,
  })
  institution?: InstitutionWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumApplicationStatus,
  })
  @IsEnum(EnumApplicationStatus)
  @IsOptional()
  @Field(() => EnumApplicationStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  submissionDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TrainingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TrainingListRelationFilter)
  @IsOptional()
  @Field(() => TrainingListRelationFilter, {
    nullable: true,
  })
  trainings?: TrainingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => WorkExperienceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WorkExperienceListRelationFilter)
  @IsOptional()
  @Field(() => WorkExperienceListRelationFilter, {
    nullable: true,
  })
  workExperiences?: WorkExperienceListRelationFilter;
}

export { ApplicationWhereInput as ApplicationWhereInput };
