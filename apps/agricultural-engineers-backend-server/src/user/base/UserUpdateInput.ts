/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApplicationUpdateManyWithoutUsersInput } from "./ApplicationUpdateManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  MaxLength,
  IsDate,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DocumentUpdateManyWithoutUsersInput } from "./DocumentUpdateManyWithoutUsersInput";
import { EducationUpdateManyWithoutUsersInput } from "./EducationUpdateManyWithoutUsersInput";
import { InstitutionUpdateManyWithoutUsersInput } from "./InstitutionUpdateManyWithoutUsersInput";
import { EnumUserRole } from "./EnumUserRole";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TrainingUpdateManyWithoutUsersInput } from "./TrainingUpdateManyWithoutUsersInput";
import { WorkExperienceUpdateManyWithoutUsersInput } from "./WorkExperienceUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ApplicationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  applications?: ApplicationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EducationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EducationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EducationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  educations?: EducationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  emailVerified?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => InstitutionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => InstitutionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => InstitutionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  institutions?: InstitutionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastLoginAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumUserRole,
  })
  @IsEnum(EnumUserRole)
  @IsOptional()
  @Field(() => EnumUserRole, {
    nullable: true,
  })
  role?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TrainingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TrainingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TrainingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  trainings?: TrainingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: () => WorkExperienceUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => WorkExperienceUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => WorkExperienceUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  workExperiences?: WorkExperienceUpdateManyWithoutUsersInput;
}

export { UserUpdateInput as UserUpdateInput };
