/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApplicationCreateNestedManyWithoutUsersInput } from "./ApplicationCreateNestedManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  MaxLength,
  IsDate,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DocumentCreateNestedManyWithoutUsersInput } from "./DocumentCreateNestedManyWithoutUsersInput";
import { EducationCreateNestedManyWithoutUsersInput } from "./EducationCreateNestedManyWithoutUsersInput";
import { InstitutionCreateNestedManyWithoutUsersInput } from "./InstitutionCreateNestedManyWithoutUsersInput";
import { EnumUserRole } from "./EnumUserRole";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TrainingCreateNestedManyWithoutUsersInput } from "./TrainingCreateNestedManyWithoutUsersInput";
import { WorkExperienceCreateNestedManyWithoutUsersInput } from "./WorkExperienceCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: () => ApplicationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  applications?: ApplicationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DocumentCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DocumentCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DocumentCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  documents?: DocumentCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => EducationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EducationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EducationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  educations?: EducationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  emailVerified?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => InstitutionCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => InstitutionCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => InstitutionCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  institutions?: InstitutionCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastLoginAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumUserRole,
  })
  @IsEnum(EnumUserRole)
  @IsOptional()
  @Field(() => EnumUserRole, {
    nullable: true,
  })
  role?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TrainingCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TrainingCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TrainingCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  trainings?: TrainingCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: () => WorkExperienceCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => WorkExperienceCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => WorkExperienceCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  workExperiences?: WorkExperienceCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
